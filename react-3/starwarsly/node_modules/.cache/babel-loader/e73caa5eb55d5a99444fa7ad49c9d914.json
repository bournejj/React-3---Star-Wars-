{"ast":null,"code":"var _jsxFileName = \"/Users/jackbourne/Documents/Springboard/react-3/starwarsly/src/Film.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getFilmFromAPI } from \"./actions/films\";\nimport Sublist from \"./Sublist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Film() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const film = useSelector(st => st.films[id]);\n  const planetState = useSelector(st => st.planets);\n  const characterState = useSelector(st => st.people);\n  const dispatch = useDispatch();\n  const missing = !film;\n  useEffect(function () {\n    if (missing) {\n      dispatch(getFilmFromAPI(id));\n    }\n  }, [missing, id, dispatch]);\n  if (missing) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"mt-5\",\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  const planets = film.planets.map(pid => ({\n    id: pid,\n    url: `/planets/${pid}`,\n    display: planetState[pid] ? planetState[pid].name : \"Unknown\"\n  }));\n  const characters = film.characters.map(cid => ({\n    id: cid,\n    url: `/people/${cid}`,\n    display: characterState[cid] ? characterState[cid].name : \"Unknown\"\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3 mb-3\",\n      children: [film.name, /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted float-right\",\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: film.openingCrawl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Director: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), film.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sublist, {\n      title: \"Planets\",\n      items: planets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sublist, {\n      title: \"People\",\n      items: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Film, \"RjBx3TvnniiTG2X+Vk5OykP/YII=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Film;\nexport default Film;\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","useParams","getFilmFromAPI","Sublist","Film","id","film","st","films","planetState","planets","characterState","people","dispatch","missing","map","pid","url","display","name","characters","cid","openingCrawl","director"],"sources":["/Users/jackbourne/Documents/Springboard/react-3/starwarsly/src/Film.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport { getFilmFromAPI } from \"./actions/films\";\nimport Sublist from \"./Sublist\";\n\n\nfunction Film() {\n\n  const {id} = useParams();\n  const film = useSelector(st => st.films[id]);\n  const planetState = useSelector(st => st.planets);\n  const characterState = useSelector(st => st.people);\n  const dispatch = useDispatch();\n  const missing = !film;\n\n  useEffect(function() {\n    if (missing) {\n      dispatch(getFilmFromAPI(id));\n    }\n  }, [missing, id, dispatch]);\n\n  if (missing) return <h1 className=\"mt-5\">loading...</h1>;\n\n  const planets = film.planets.map(pid => ({\n    id: pid,\n    url: `/planets/${pid}`,\n    display: planetState[pid] ? planetState[pid].name : \"Unknown\"\n  }));\n\n  const characters = film.characters.map(cid => ({\n    id: cid,\n    url: `/people/${cid}`,\n    display: characterState[cid] ? characterState[cid].name : \"Unknown\"\n  }));\n\n  return (\n    <div>\n\n      <h1 className=\"mt-3 mb-3\">\n        {film.name}\n        <small className=\"text-muted float-right\">{id}</small>\n      </h1>\n\n      <p className=\"lead\">{film.openingCrawl}</p>\n\n      <p><b>Director: </b>{film.director}</p>\n\n      <Sublist title=\"Planets\" items={planets} />\n      <Sublist title=\"People\" items={characters} />\n    </div>\n  );\n}\n\nexport default Film;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,SAASC,IAAT,GAAgB;EAAA;;EAEd,MAAM;IAACC;EAAD,IAAOJ,SAAS,EAAtB;EACA,MAAMK,IAAI,GAAGP,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACC,KAAH,CAASH,EAAT,CAAP,CAAxB;EACA,MAAMI,WAAW,GAAGV,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACG,OAAV,CAA/B;EACA,MAAMC,cAAc,GAAGZ,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACK,MAAV,CAAlC;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,OAAO,GAAG,CAACR,IAAjB;EAEAR,SAAS,CAAC,YAAW;IACnB,IAAIgB,OAAJ,EAAa;MACXD,QAAQ,CAACX,cAAc,CAACG,EAAD,CAAf,CAAR;IACD;EACF,CAJQ,EAIN,CAACS,OAAD,EAAUT,EAAV,EAAcQ,QAAd,CAJM,CAAT;EAMA,IAAIC,OAAJ,EAAa,oBAAO;IAAI,SAAS,EAAC,MAAd;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEb,MAAMJ,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAaK,GAAb,CAAiBC,GAAG,KAAK;IACvCX,EAAE,EAAEW,GADmC;IAEvCC,GAAG,EAAG,YAAWD,GAAI,EAFkB;IAGvCE,OAAO,EAAET,WAAW,CAACO,GAAD,CAAX,GAAmBP,WAAW,CAACO,GAAD,CAAX,CAAiBG,IAApC,GAA2C;EAHb,CAAL,CAApB,CAAhB;EAMA,MAAMC,UAAU,GAAGd,IAAI,CAACc,UAAL,CAAgBL,GAAhB,CAAoBM,GAAG,KAAK;IAC7ChB,EAAE,EAAEgB,GADyC;IAE7CJ,GAAG,EAAG,WAAUI,GAAI,EAFyB;IAG7CH,OAAO,EAAEP,cAAc,CAACU,GAAD,CAAd,GAAsBV,cAAc,CAACU,GAAD,CAAd,CAAoBF,IAA1C,GAAiD;EAHb,CAAL,CAAvB,CAAnB;EAMA,oBACE;IAAA,wBAEE;MAAI,SAAS,EAAC,WAAd;MAAA,WACGb,IAAI,CAACa,IADR,eAEE;QAAO,SAAS,EAAC,wBAAjB;QAAA,UAA2Cd;MAA3C;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE;MAAG,SAAS,EAAC,MAAb;MAAA,UAAqBC,IAAI,CAACgB;IAA1B;MAAA;MAAA;MAAA;IAAA,QAPF,eASE;MAAA,wBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH,EAAqBhB,IAAI,CAACiB,QAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAWE,QAAC,OAAD;MAAS,KAAK,EAAC,SAAf;MAAyB,KAAK,EAAEb;IAAhC;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE,QAAC,OAAD;MAAS,KAAK,EAAC,QAAf;MAAwB,KAAK,EAAEU;IAA/B;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA7CQhB,I;UAEMH,S,EACAF,W,EACOA,W,EACGA,W,EACNC,W;;;KANVI,I;AA+CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}